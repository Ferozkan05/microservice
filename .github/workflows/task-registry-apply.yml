name: Terraform Apply to Register ECS Task & Service on Merge to Main

on:
  workflow_dispatch:
    inputs:
      tf_directory:
        description: 'Terraform dir  (e.g. patient)'
        required: true
        default: 'admin'
      tfvars:
        description: 'Terraform vars  (e.g. ../admin.tfvars)'
        required: true
        default: '../admin.tfvars'
      create:
        description: 'Deploy?'
        required: true
        default: 'true'
        type: boolean       

jobs:
  terraform:
    name: Terraform Apply on Main
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.3.7

    - name: Terraform Init
      run: terraform init 
      working-directory: ${{ github.event.inputs.tf_directory }}
    
    - name: Terraform Plan
      if: ${{ github.event.inputs.create == 'true' }}
      run: terraform plan -var-file=${{ github.event.inputs.tfvars }}
      working-directory: ${{ github.event.inputs.tf_directory }}
  
    - name: Terraform Apply
      if: ${{ github.event.inputs.create == 'true' }}
      run: terraform apply -auto-approve -var-file=${{ github.event.inputs.tfvars }}
      working-directory: ${{ github.event.inputs.tf_directory }}

    - name: Terraform Destory
      if: ${{ github.event.inputs.create == 'false' }}
      run: terraform destroy -var-file=${{ github.event.inputs.tfvars }}
      working-directory: ${{ github.event.inputs.tf_directory }}       
     
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
